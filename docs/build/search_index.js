var documenterSearchIndex = {"docs":
[{"location":"","page":"Multiscale System and Homogenized Limit Pairs","title":"Multiscale System and Homogenized Limit Pairs","text":"Welcome to the documentation page for \"MDE for Multiscale\"!","category":"page"},{"location":"","page":"Multiscale System and Homogenized Limit Pairs","title":"Multiscale System and Homogenized Limit Pairs","text":"Fast_OU_ϵ\nFast_OU_∞\nLDA\nNLDAM\nNSDP\nLangevin_ϵ\nK\nLangevin_∞\nLDO\nNLDO\nLangevin_ϵ_2D\nLangevin_∞_2D\nBurger_ϵ\nBurger_∞\nFast_chaotic_ϵ\nFast_chaotic_∞","category":"page"},{"location":"#MDE_project.Fast_OU_ϵ","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Fast_OU_ϵ","text":"Fast_OU_ϵ(x0, y0; <keyword arguments>)\n\nReturn a two-dimensional fast-slow Ornstein-Uhlenbeck process starting at (x0, y0) as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX_ϵ(t) = left( frac1ϵ σ(X_ϵ(t)) Y_ϵ(t) + h(X_ϵ(t) Y_ϵ(t)) - σ(X_ϵ(t))σ(X_ϵ(t)) right) dt quad X_ϵ(0) = x_0 \n  dY_ϵ(t) = -frac1ϵ^2 Y_ϵ(t) + fracsqrt2ϵ dV(t) quad Y_ϵ(0) = y_0\nendaligned\n\nHere, σ is the first derivative of σ. A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nx0::Real:         initial point x_0 of slow process X_ϵ.\ny0::Real:         initial point y_0 of fast process Y_ϵ.\nfunc_config:      collection of the functions h σ and σ as a tuple.\nϵ::Real=0.1:      positive small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nExamples\n\njulia> h = x -> -x\njulia> σ = x -> sqrt(2)\njulia> σ_prime = x -> 0\njulia> Fast_OU_ϵ(1.0, 1.0, func_config=(h, σ, σ_prime))\n\n\n\nSee also Fast_OU_∞, LDA, NLDAM, NSDP.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Fast_OU_∞","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Fast_OU_∞","text":"Fast_OU_∞(X0; <keyword arguments>)\n\nReturn a one-dimensional limit process, homogenized from the fast-slow Ornstein-Uhlenbeck process figuring in Fast_OU_ϵ, starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX(t) = barh(X(t)) dt - sqrt2 σ(X(t))^2 dW(t) quad X(0) = X_0\nendaligned\n\nHere, barh is the average of h with respect to the invariant measure of the fast process Y_ϵ coming from Fast_OU_ϵ.  A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Real:         initial point X_0 of limit process X.\nfunc_config:      collection of the functions barh and σ as a tuple.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nExamples\n\njulia> h_aver = x -> -x   # corresponds to an ordinary Ornstein-Uhlenbeck process\njulia> σ = x -> sqrt(2)\njulia> Fast_OU_∞(1.0, func_config=(h_aver, σ))\n\n\n\nSee also Fast_OU_ϵ, LDA, NLDAM, NSDP.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.LDA","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.LDA","text":"LDA(A, σ)\n\nReturn a tuple of functions used for the definition of Fast_OU_ϵ.\n\nThe returned functions are\n\nbeginaligned\n  h(x) = -Ax quad A  0 \n  σ(x) = sqrtσquad\n  σ(x) = 0  quad σ0\nendaligned\n\nThey yield a linear drift with additive noise.\n\n\n\nArguments\n\nA::Real=1:        non-negative real number.\nσ::Real=1:        positive real number.\n\n\n\nSee also Fast_OU_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.NLDAM","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.NLDAM","text":"NLDAM(A, B, σ_a, σ_b)\n\nReturn a tuple of functions used for the definition of Fast_OU_ϵ.\n\nThe returned functions are\n\nbeginaligned\n  h(x) = Ax - Bx^3 quad A B  0 \n  σ(x) = sqrtσ_a + σ_b x^2 quad\n  σ(x) = fracσ_b xsqrtσ_a + σ_b x^2 quad σ_a σ_b  0\nendaligned\n\nThey yield a nonlinear drift with additive and multiplicative noise.\n\n\n\nArguments\n\nA::Real=1:          non-negative real number.\nB::Real=1:          non-negative real number.\nσ_a::Real=1:        positive real number.\nσ_b::Real=1:        positive real number.\n\n\n\nSee also Fast_OU_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.NSDP","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.NSDP","text":"NSDP(A, B, C, σ_a, σ_b)\n\nReturn a tuple of functions used for the definition of Fast_OU_ϵ.\n\nThe returned functions are\n\nbeginaligned\n  h(x) = Ax + Bx^2 - Cx^3 quad A B C  0 \n  σ(x) = sqrtσ_a + σ_b x^2 quad\n  σ(x) = fracσ_b xsqrtσ_a + σ_b x^2 quad σ_a σ_b  0\nendaligned\n\nThey yield a nonlinear, non-symmetric double-well potential drift with additive and multiplicative noise.\n\n\n\nArguments\n\nA::Real=1:          non-negative real number.\nB::Real=1:          non-negative real number.\nC::Real=1:          non-negative real number.\nσ_a::Real=1:        positive real number.\nσ_b::Real=1:        positive real number.\n\n\n\nSee also Fast_OU_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Langevin_ϵ","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Langevin_ϵ","text":"Langevin_ϵ(x0; <keyword arguments>)\n\nReturn a two-dimensional overdamped Langevin process with a large-scale potential and a fast oscillating part starting at (x0, y0/ϵ) as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX_ϵ(t) = -α V(X_ϵ(t)) - frac1ϵ pleft( fracX_ϵ(t)ϵ right) dt  + sqrt2 σ dU(t) quad X_ϵ(0) = x_0 \n  dY_ϵ(t) = -fracαϵ V(X_ϵ(t)) - frac1ϵ^2 pleft( Y_ϵ(t) right) dt  + sqrtfrac2 σϵ^2 dU(t) quad Y_ϵ(0) = y_0\nendaligned\n\nHere, V is a large-scale potential and p a 2π-periodic function, see LDO or NLDO. Note that Y_ϵ = X_ϵϵ.  A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nx0::Real:         initial point x_0 of slow process X_ϵ.\nfunc_config:      collection of the functions V V p and p as a tuple.\nα::Real:          non-negative drift parameter α.\nσ::Real:          positive diffusion parameter σ.\nϵ::Real=0.1:      positive small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Langevin_∞, LDO, NLDO.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.K","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.K","text":"K(p, σ)\n\nReturn corrective constant of the cell problem of the homogenization in the overdamped Langevin case.\n\n\n\nArguments\n\np:                2π-periodic function.\nσ:                positive diffusion parameter of slow process X_ϵ.\n\n\n\nSee also Langevin_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Langevin_∞","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Langevin_∞","text":"Langevin_∞(X0; <keyword arguments>)\n\nReturn a one-dimensional overdamped limit Langevin process, homogenized from the multiscale overdamped Langevin process figuring in Langevin_ϵ, starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX(t) = -α K V(X(t)) dt  + sqrt2 σ K dW(t) quad X(0) = X_0\nendaligned\n\nHere, K is a corrective constant that comes from the cell problem of the homogenization, see also K, and is computed inside the function. A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Real:         initial point X_0 of limit process X.\nfunc_config:      collection of the functions V V p and p as a tuple.\nα::Real:          non-negative drift parameter α.\nσ::Real:          positive diffusion parameter σ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Langevin_ϵ, LDO, NLDO.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.LDO","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.LDO","text":"LDO()\n\nReturn a tuple of functions used for the definition of Langevin_ϵ and Langevin_∞.\n\nThe returned functions are\n\nbeginaligned\n  V(x) = frac12 x^2 quad\n  V(x) = x \n  p(x) = sin(x) quad\n  p(x) = cos(x)\nendaligned\n\nThey yield a quadratic potential drift with a sine oscillation.\n\n\n\nSee also Langevin_ϵ, Langevin_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.NLDO","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.NLDO","text":"NLDO()\n\nReturn a tuple of functions used for the definition of Langevin_ϵ and Langevin_∞.\n\nThe returned functions are\n\nbeginaligned\n  V(x) = frac14 x^4 - frac12 x^2 quad\n  V(x) = x^3 - x \n  p(x) = sin(x) quad\n  p(x) = cos(x)\nendaligned\n\nThey yield a bistable potential drift with a sine oscillation.\n\n\n\nSee also Langevin_ϵ, Langevin_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Langevin_ϵ_2D","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Langevin_ϵ_2D","text":"Langevin_ϵ_2D(x0; <keyword arguments>)\n\nReturn a four-dimensional overdamped Langevin process with a quadratic potential and a fast separable oscillating part starting at (x0, y0/ϵ) as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX_ϵ(t) \n  = beginpmatrix\n      dX^(1)_ϵ(t) 01cm\n      dX^(2)_ϵ(t)\n    endpmatrix\n  = - M X_ϵ(t) - frac1ϵ \n    beginpmatrix\n      p_1left(X^(1)_ϵ(t)ϵright) 01cm\n      p_2left(X^(2)_ϵ(t)ϵright)\n    endpmatrix dt  + sqrt2 σ dU(t) quad X_ϵ(0) = x_0 \n  dY_ϵ(t) = fracX_ϵϵ\nendaligned\n\nA simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nx0::Vector{Real}: initial point x_0 in mathbbR^2 of slow process X_ϵ.\nfunc_config:      collection of the 2pi-periodic functions p_1 and p_2 as a tuple.\nM::Array{Real}:   positive definite drift matrix M in mathbbR^2 times 2.\nσ::Real:          positive diffusion parameter σ.\nϵ::Real=0.1:      positive small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Langevin_∞_2D.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Langevin_∞_2D","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Langevin_∞_2D","text":"Langevin_∞_2D(X0; <keyword arguments>)\n\nReturn a two-dimensional overdamped limit Langevin process, homogenized from the multiscale overdamped Langevin process figuring in Langevin_ϵ_2D,  starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX(t) = - K M X(t) dt  + sqrt2 σ K dW(t) quad X(0) = X_0\nendaligned\n\nHere, K in mathbbR^2 times 2 is a corrective constant that comes from the cell problem of the homogenization and is computed inside the function.  A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Vector{Real}: initial point X_0 in mathbbR^2 of limit process X.\nfunc_config:      collection of the 2pi-periodic functions p_1 and p_2 as a tuple.\nM::Array{Real}:   positive definite drift matrix M in mathbbR^2 times 2.\nσ::Real:          positive diffusion parameter σ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Langevin_ϵ_2D.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Burger_ϵ","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Burger_ϵ","text":"Burger_ϵ(x0, y0, z0; <keyword arguments>)\n\nReturn a three-dimensional process described through a truncated Burger's equation starting at (x0, y0, z0) as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX_ϵ(t) = left( ν X_ϵ(t) - frac12ϵ (X_ϵ(t)Y_ϵ(t) + Y_ϵ(t)Z_ϵ(t)) right) dt                                                 quad X_ϵ(0) = x_0  \n  dY_ϵ(t) = left( ν Y_ϵ(t) - frac3ϵ^2 Y_ϵ(t) - frac12ϵ (2 X_ϵ(t)Z_ϵ(t) - X_ϵ(t)^2) right) dt + fracq_1ϵ dV_1(t)    quad Y_ϵ(0) = y_0  \n  dZ_ϵ(t) = left( ν Z_ϵ(t) - frac8ϵ^2 Y_ϵ(t) - frac32ϵ X_ϵ(t)Y_ϵ(t) right) dt + fracq_2ϵ dV_2(t)                   quad Z_ϵ(0) = z_0\nendaligned\n\nA simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nx0::Real:         initial point x_0 of slow process X_ϵ.\ny0::Real:         initial point y_0 of fast process Y_ϵ.\nz0::Real:         initial point z_0 of fast process Z_ϵ.\nν::Real:          positive parameter ν.\nq1::Real:         positive parameter q_1.\nq2::Real:         positive parameter q_2.\nϵ::Real=0.1:      positive small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Burger_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Burger_∞","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Burger_∞","text":"Burger_∞(X0; <keyword arguments>)\n\nReturn a one-dimensional process described through a limit truncated Burger's equation, homogenized from the multiscale truncated Burger's equation figuring in Burger_ϵ, starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX(t) = left(AX(t) - BX(t)^3right) dt  + sqrtσ_a + σ_bX(t)^2 dW(t) quad X(0) = X_0\nendaligned\n\nwith the paraters\n\nbeginaligned\n  A = ν + fracq_1^2396 + fracq_2^2352 quad B = frac112 quad σ_a = fracq_1^2 q_2^22112 quad σ_b = fracq_1^236\nendaligned\n\nA simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Real:         initial point X_0 of limit process X.\nν::Real:          positive parameter ν.\nq1::Real:         positive parameter q_1.\nq2::Real:         positive parameter q_2.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Burger_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Fast_chaotic_ϵ","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Fast_chaotic_ϵ","text":"Fast_chaotic_ϵ(xy0; <keyword arguments>)\n\nReturn the four-dimensional solution path of a fast chaotic noise system starting at xy0 as a discretized time series.\n\nThe corresponding ordinary differential equation is defined for t in 0T as\n\nbeginaligned\n  fracdX_epsilondt = AX - BX^3 + fraclambdaepsilon Y_epsilon^(2) quad X_ϵ(0) = x_0 \n  fracdY_epsilon^(1)dt = frac10epsilon^2 left( Y_epsilon^(2) - Y_epsilon^(1) right) quad Y_epsilon^(1)(0) = y_0^(1) \n  fracdY_epsilon^(2)dt = frac1epsilon^2 left( 28 Y_epsilon^(1) - Y_epsilon^(2) - Y_epsilon^(1)Y_epsilon^(3) right) quad Y_epsilon^(2)(0) = y_0^(2) \n  fracdY_epsilon^(3)dt = frac1epsilon^2 left( Y_epsilon^(1)Y_epsilon^(2) - frac83 Y_epsilon^(3) right) quad Y_epsilon^(3)(0) = y_0^(3)\nendaligned\n\nThe ODE is solved with a fourth order Runge-Kutta scheme of the DifferentialEquations.jl  package.\n\n\n\nArguments\n\nxy0::Vector{Real}:  initial point (x_0 y_0^(1) y_0^(2) y_0^(3)) in mathbbR^4.\nA::Real:            positive parameter A.\nB::Real:            positive parameter B.\nλ::Real:            positive parameter λ.\nT::Real=100:        time horizon of time series.\ndt:Real=1e-3:       time discretization step used in the ODE solver.\n\n\n\nSee also Fast_chaotic_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Fast_chaotic_∞","page":"Multiscale System and Homogenized Limit Pairs","title":"MDE_project.Fast_chaotic_∞","text":"Fast_chaotic_∞(X0; <keyword arguments>)\n\nReturn a one-dimensional process described through a limit fast chaotic noise, homogenized from the multiscale fast chaotic noise system figuring in Fast_chaotic_ϵ, starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is defined for t in 0T as\n\nbeginaligned\n  dX(t) = left(AX(t) - BX(t)^3right) dt  + sqrtσ dW(t) quad X(0) = X_0\nendaligned\n\nThe diffusion parameter σ is given by the Green-Kubo formula \n\nbeginaligned\n  sigma = fraclambda^22 int_0^infty lim_T rightarrow infty frac1T int_0^T Y_ϵ=1^(2)(s) Y_ϵ=1^(2)(s+t)  ds  dt\nendaligned\n\nwhich requires to be numerically computed or estimated through data. A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Real:         initial point X_0 of limit process X.\nA::Real:          positive drift parameter A.\nB::Real:          positive drift parameter B.\nσ::Real:          positive diffusion parameter σ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Fast_chaotic_ϵ.\n\n\n\n\n\n","category":"function"}]
}
