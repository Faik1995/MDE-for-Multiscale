var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"Welcome to the documentation page for \"MDE for Multiscale\"!","category":"page"},{"location":"","page":"Home","title":"Home","text":"Fast_OU_ϵ\nFast_OU_∞\nLDA\nNLDAM\nNSDP\nOverdamped_LO_ϵ\nK\nOverdamped_LO_∞\nLDO\nNLDO","category":"page"},{"location":"#MDE_project.Fast_OU_ϵ","page":"Home","title":"MDE_project.Fast_OU_ϵ","text":"Fast_OU_ϵ(x0, y0; <keyword arguments>)\n\nReturn a two-dimensional fast-slow Ornstein-Uhlenbeck process starting at (x0, y0) as a discretized time series.\n\nThe corresponding stochastic differential equation is for t in 0T\n\nbeginaligned\n  dX_ϵ(t) = left( frac1ϵ σ(X_ϵ(t)) Y_ϵ(t) + h(X_ϵ(t) Y_ϵ(t)) - σ(X_ϵ(t))σ(X_ϵ(t)) right) dt quad X_ϵ(0) = x_0 \n  dY_ϵ(t) = -frac1ϵ^2 Y_ϵ(t) + fracsqrt2ϵ dV(t) quad Y_ϵ(0) = y_0\nendaligned\n\nHere, σ is the first derivative of σ. A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nx0::Real:         initial point x_0 of slow process X_ϵ.\ny0::Real:         initial point y_0 of fast process Y_ϵ.\nfunc_config:      collection of the functions h σ and σ as a tuple.\nϵ::Real=0.1:      small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nExamples\n\njulia> h = x -> -x\njulia> σ = x -> sqrt(2)\njulia> σ_prime = x -> 0\njulia> Fast_OU_ϵ(1.0, 1.0, func_config=(h, σ, σ_prime))\n\n\n\nSee also Fast_OU_∞, LDA, NLDAM, NSDP.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Fast_OU_∞","page":"Home","title":"MDE_project.Fast_OU_∞","text":"Fast_OU_∞(X0; <keyword arguments>)\n\nReturn a one-dimensional limit process, homogenized from the fast-slow Ornstein-Uhlenbeck process, starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is for t in 0T\n\nbeginaligned\n  dX(t) = barh(X(t)) dt - sqrt2 σ(X(t))^2 dW(t) quad X(0) = X_0\nendaligned\n\nHere, barh is the average of h with respect to the invariant measure of the fast process Y_ϵ coming from Fast_OU_ϵ.  A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Real:         initial point X_0 of limit process X.\nfunc_config:      collection of the functions barh and σ as a tuple.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nExamples\n\njulia> h_aver = x -> -x   # corresponds to an ordinary Ornstein-Uhlenbeck process\njulia> σ = x -> sqrt(2)\njulia> Fast_OU_∞(1.0, func_config=(h_aver, σ))\n\n\n\nSee also Fast_OU_ϵ, LDA, NLDAM, NSDP.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.LDA","page":"Home","title":"MDE_project.LDA","text":"LDA(A, σ)\n\nReturn a tuple of functions used for the definition of Fast_OU_ϵ.\n\nThe returned functions are\n\nbeginaligned\n  h(x) = -Ax quad A  0 \n  σ(x) = sqrtσ quad σ0 \n  σ(x) = 0\nendaligned\n\nThey yield a linear drift with additive noise.\n\n\n\nArguments\n\nA::Real=1:        non-negative real number.\nσ::Real=1:        positive real number.\n\n\n\nSee also Fast_OU_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.NLDAM","page":"Home","title":"MDE_project.NLDAM","text":"NLDAM(A, B, σ_a, σ_b)\n\nReturn a tuple of functions used for the definition of Fast_OU_ϵ.\n\nThe returned functions are\n\nbeginaligned\n  h(x) = Ax - Bx^3 quad A B  0 \n  σ(x) = sqrtσ_a + σ_b x^2 quad σ_a σ_b  0 \n  σ(x) = fracσ_b xsqrtσ_a + σ_b x^2\nendaligned\n\nThey yield a nonlinear drift with additive and multiplicative noise.\n\n\n\nArguments\n\nA::Real=1:          non-negative real number.\nB::Real=1:          non-negative real number.\nσ_a::Real=1:        positive real number.\nσ_b::Real=1:        positive real number.\n\n\n\nSee also Fast_OU_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.NSDP","page":"Home","title":"MDE_project.NSDP","text":"NSDP(A, B, C, σ_a, σ_b)\n\nReturn a tuple of functions used for the definition of Fast_OU_ϵ.\n\nThe returned functions are\n\nbeginaligned\n  h(x) = Ax + Bx^2 - Cx^3 quad A B C  0 \n  σ(x) = sqrtσ_a + σ_b x^2 quad σ_a σ_b  0 \n  σ(x) = fracσ_b xsqrtσ_a + σ_b x^2\nendaligned\n\nThey yield a nonlinear, non-symmetric double-well potential drift with additive and multiplicative noise.\n\n\n\nArguments\n\nA::Real=1:          non-negative real number.\nB::Real=1:          non-negative real number.\nC::Real=1:          non-negative real number.\nσ_a::Real=1:        positive real number.\nσ_b::Real=1:        positive real number.\n\n\n\nSee also Fast_OU_ϵ.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Overdamped_LO_ϵ","page":"Home","title":"MDE_project.Overdamped_LO_ϵ","text":"Overdamped_LO_ϵ(x0; <keyword arguments>)\n\nReturn a two-dimensional overdamped Langevin process with a large-scale potential and a fast oscillating part starting at (x0, y0/ϵ) as a discretized time series.\n\nThe corresponding stochastic differential equation is for t in 0T\n\nbeginaligned\n  dX_ϵ(t) = -α V(X_ϵ(t)) - frac1ϵ pleft( fracX_ϵ(t)ϵ right) dt  + sqrt2 σ dW(t) quad X_ϵ(0) = x_0 \n  dY_ϵ(t) = -fracαϵ V(X_ϵ(t)) - frac1ϵ^2 pleft( Y_ϵ(t) right) dt  + sqrtfrac2 σϵ^2 dW(t) quad Y_ϵ(0) = y_0\nendaligned\n\nHere, V is a large-scale potential and p a 2π-periodic function, see LDO or NLDO. Note that Y_ϵ = X_ϵϵ. A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nx0::Real:         initial point x_0 of slow process X_ϵ.\nfunc_config:      collection of the functions V V p and p as a tuple.\nα::Real:          non-negative drift parameter α.\nσ::Real:          positive diffusion parameter σ.\nϵ::Real=0.1:      small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Overdamped_LO_∞, LDO, NLDO.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.K","page":"Home","title":"MDE_project.K","text":"K(p, σ)\n\nReturn corrective constant of the cell problem of the homogenization in the overdamped Langevin case.\n\n\n\nArguments\n\np:                2π-periodic function.\nσ:                positive diffusion parameter of slow process X_ϵ.\n\n\n\nSee also Overdamped_LO_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.Overdamped_LO_∞","page":"Home","title":"MDE_project.Overdamped_LO_∞","text":"Overdamped_LO_∞(X0; <keyword arguments>)\n\nReturn a one-dimensional overdamped limit Langevin process, homogenized from the multiscale overdamped Langevin process,  starting at X0 as a discretized time series.\n\nThe corresponding stochastic differential equation is for t in 0T\n\nbeginaligned\n  dX(t) = -α K V(X(t)) dt  + sqrt2 σ K dW(t) quad X(0) = X_0\nendaligned\n\nHere, K is a corrective constant that comes from the cell problem of the homogenization, see alsoK, and is computed inside the function. A simple Euler-Maruyama discretization is implemented for the generation of the time series.\n\n\n\nArguments\n\nX0::Real:         initial point X_0 of slow process X_ϵ.\nfunc_config:      collection of the functions V V p and p as a tuple.\nα::Real:          non-negative drift parameter α.\nσ::Real:          positive diffusion parameter σ.\nϵ::Real=0.1:      small scale parameter ϵ.\nT::Real=100:      time horizon of time series.\ndt:Real=1e-3:     time discretization step used in the Euler-Maruyama scheme.\n\n\n\nSee also Overdamped_LO_ϵ, LDO, NLDO.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.LDO","page":"Home","title":"MDE_project.LDO","text":"LDO()\n\nReturn a tuple of functions used for the definition of Overdamped_LO_ϵ and Overdamped_LO_∞.\n\nThe returned functions are\n\nbeginaligned\n  V(x) = frac12 x^2 \n  V(x) = x \n  p(x) = sin(x) \n  p(x) = cos(x)\nendaligned\n\nThey yield a quadratic potential drift with a sine oscillation.\n\n\n\nSee also Overdamped_LO_ϵ, Overdamped_LO_∞.\n\n\n\n\n\n","category":"function"},{"location":"#MDE_project.NLDO","page":"Home","title":"MDE_project.NLDO","text":"NLDO()\n\nReturn a tuple of functions used for the definition of Overdamped_LO_ϵ and Overdamped_LO_∞.\n\nThe returned functions are\n\nbeginaligned\n  V(x) = frac14 x^4 - frac12 x^2 \n  V(x) = x^3 - x \n  p(x) = sin(x) \n  p(x) = cos(x)\nendaligned\n\nThey yield a bistable potential drift with a sine oscillation.\n\n\n\nSee also Overdamped_LO_ϵ, Overdamped_LO_∞.\n\n\n\n\n\n","category":"function"}]
}
